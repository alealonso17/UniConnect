//THIS CLASS WILL BE USE TO STORE ELEMENTS FROM THE INDEX PAGE THAT WILL BE REUSED IN THE FUTURE


class LoadComponents {
  //Posts are random before havign db mysql system so they where generated by IA 
  static posts = [
    {
      name: "Sarah Johnson",
      university: "Stanford University",
      time: "2 hours ago",
      content:
        "Just finished my final exam for Computer Science 101! The algorithms section was challenging but I think I did well. Anyone else taking CS courses this semester?",
      image: "public/images/posts/exam.jpg",
      likes: 24,
      comments: 5,
      profilePic: "public/images/profilePics/avatar.svg"
    },
    {
      name: "Michael Brown",
      university: "Harvard University",
      time: "1 hour ago",
      content:
        "Started building my new side project using Node.js and TailwindCSS. Canâ€™t believe how fast everything comes together!",
      image: "public/images/posts/happy.jpeg",
      likes: 42,
      comments: 9,
      profilePic: "public/images/profilePics/avatar-2.svg"
    },
    {
      name: "Laura GarcÃ­a",
      university: "MIT",
      time: "10 minutes ago",
      content:
        "Today I gave my first presentation about AI ethics â€” it went surprisingly well! Feeling proud and relieved ðŸ˜…",
      image: "public/images/posts/presentation.jpg",
      likes: 15,
      comments: 3,
      profilePic:"public/images/profilePics/avatar-3.svg"
    },
    {
      name: "Daniel Evans",
      university: "University of Oxford",
      time: "3 hours ago",
      content:
        "Working on a new research paper about sustainable computing. The goal is to reduce power usage in data centers through adaptive algorithms.",
      image: "public/images/banner.jpeg",
      likes: 33,
      comments: 4,
      profilePic: "public/images/profilePics/avatar-4.svg"
    }
  ];

  //We create a static (so we can use it in index) function that load the posts (reusable âœ…)
  static loadPosts() {
    const page = document.body.id; // get the page we are in 
    const container =  document.getElementById("posts") ; //In container we store the element with id posts

    //PAGE VARIATIONS 
    const sizeW = page === "index" ? "800px" : "1200px"; //I need a diferent size for the articles  depending if I am showing posts in the profile section or the index section


    //Inside of that container we add innerhtml text also we map each posts and join them wth "" 
    container.innerHTML = this.posts.map(post => /* html */ ` 
     
              <article class="w-[${sizeW}] rounded-2xl">

                  <header >
                      <img src="${post.profilePic}" alt=${post.name} class="profilePicture">
                      <div>
                          <h1>${post.name}</h1>
                          <p>${post.university} â€¢ ${post.time}</p>
                      </div>
                  </header>


                  <section class="articleContent" >
                      <p> ${post.content}</p>
                      ${post.image ? `<img id="postImage" src="${post.image}" alt="">` : ""} 
                  </section>

                  <footer class="w-[${sizeW}]">
                      <div class="leftPartFooterArticle">
                          <button class=" p-2 rounded-xl h-10 w-15 hover:bg-[#ede7f6] hover:text-[#5b67ca] hover:cursor-pointer transition-all duration-150 ease-in-out">
                              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                                  stroke="currentColor" class="size-6">
                                  <path stroke-linecap="round" stroke-linejoin="round"
                                      d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z" />
                              </svg>
                              <h4> ${post.likes}</h4>
                          </button>


                          <button  class=" p-2 rounded-xl h-10 w-auto hover:bg-[#ede7f6] hover:text-[#5b67ca] hover:cursor-pointer transition-all duration-150 ease-in-out">
                              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                                  stroke="currentColor" class="size-6">
                                  <path stroke-linecap="round" stroke-linejoin="round"
                                      d="M12 20.25c4.97 0 9-3.694 9-8.25s-4.03-8.25-9-8.25S3 7.444 3 12c0 2.104.859 4.023 2.273 5.48.432.447.74 1.04.586 1.641a4.483 4.483 0 0 1-.923 1.785A5.969 5.969 0 0 0 6 21c1.282 0 2.47-.402 3.445-1.087.81.22 1.668.337 2.555.337Z" />
                              </svg>
                              <h4> ${post.comments}</h4>
                          </button>
                      </div>
                      <div class="rightPartFooterArticle">
                          <button  class=" p-2 rounded-xl h-10 w-10 hover:bg-[#ede7f6] hover:text-[#5b67ca] hover:cursor-pointer transition-all duration-150 ease-in-out">
                              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                                  stroke="currentColor" class="size-6">
                                  <path stroke-linecap="round" stroke-linejoin="round"
                                      d="M7.217 10.907a2.25 2.25 0 1 0 0 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186 9.566-5.314m-9.566 7.5 9.566 5.314m0 0a2.25 2.25 0 1 0 3.935 2.186 2.25 2.25 0 0 0-3.935-2.186Zm0-12.814a2.25 2.25 0 1 0 3.933-2.185 2.25 2.25 0 0 0-3.933 2.185Z" />
                              </svg>
                          </button>
                      </div>

                  </footer>

              </article>`
    ).join("");
  }



  //function to load the header 
  static loadHeader() {
    const page = document.body.id; //get the id of the body. in each bosy I put the id with the name of the file 
    
    //the styles i want to apply on the buttons depending on what page i am 
    const activeStyle = "flex items-center justify-center gap-2 h-[35px] w-[90px] rounded-xl p-2 bg-[#5b67ca] font text-[white]"; 
    const inactiveStyle = "flex items-center gap-2 rounded-xl justify-center p-2   h-[35px] w-[90px]  hover:bg-[#ede7f6] hover:text-[#5b67ca] hover:cursor-pointer transition-all duration-150 ease-in-out" ; 

    const feedStyle = (page === "index") ? activeStyle : inactiveStyle ; //if page = "index" add active style to the feed btn else inactive style 
    const profileStyle = (page === "profile") ? activeStyle : inactiveStyle ; // //if page = "profile" add active style to the feed btn else inactive style 


    document.body.insertAdjacentHTML("afterbegin", /* html */ `

      <header class="flex items-center justify-between p-3  border-b  border-gray-200 z-30 shadow-sm fixed w-screen bg-white ">
        <!--Header (flex space between) is divided into 2 parts right(logo + searchbar)  and left(options)  -->

        <!--Left part of header-->
        <div id="headerLeft" class="flex gap-15 mt-2 ">

            <!--FUTURE LOGO INSTEAD OF THE H1-->
            <a href="index.html">
                <h1 class="text-2xl font-medium text-[#7746e1] ml-4">UniConnect</h1>
            </a>

            <!--Search bar-->
            <div id="searchbar" class="relative -translate-y-0.5 ">
                <input type="text"
                    class="p-2 rounded-2xl pl-10   w-[300px] placeholder:text-md  focus:outline-none focus:ring-2 focus:ring-[#7746e1] transition-all duration-300 focus:shadow-sm  "
                    placeholder="Search UniConnect...">
                <img src="public/images/svg/search.svg" alt=""
                    class="w-5 h-5 absolute left-1 top-2.5 pointer-events-none">
            </div>

        </div>

        <!--Right part of header-->
        <div id="headerRight" class="flex items-center font-medium justify-around gap-2 mr-9 ">

            <!--Feed link (I use a because is a link redirectiong to another page )-->
            <a href="index.html" id="feedBtn" class="${feedStyle}">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="CurrentColor" class="w-5 h-5 inline-block size-6">
              <path stroke-linecap="round" stroke-linejoin="round" d="m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" />
            </svg>
                <span>Feed</span>
            </a>Â 

            <!--Notification button (I use button because is an action ,in this case a menu will display in the page, not a redirect link )-->
            <button id="notiBtn" class="flex items-center mr-1.5 rounded-xl h-10 w-10 justify-center  hover:bg-[#ede7f6] hover:text-[#5b67ca] hover:cursor-pointer transition-all duration-150 ease-in-out">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="size-6 w-5 h-5 inline-block ">
              <path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 0 0 5.454-1.31A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6 9v.75a8.967 8.967 0 0 1-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 0 1-5.714 0m5.714 0a3 3 0 1 1-5.714 0" />
            </svg>

                
            </button>

            <!--Profile link -->
            <a href="profile.html" id="profileBtn" class= "${profileStyle}" >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5 inline-block ">
                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z" />
            </svg>
                <span>Profile</span>
            </a>

            <!--Profile picture of the user => REDIRECT TO PROFILE.HTML-->
            <a href="profile.html"><img src="public/images/profile.png" alt="" class="h-[40px] w-[40px] rounded-4xl ml-3"> </a>
        </div>

    </header>
`)
  }

  static loadFooter(){
    document.body.insertAdjacentHTML("beforeend", /* html */ 
      
      ` <footer class="border-t border-gray-200 mt-20 py-6 flex flex-col items-center gap-4 text-sm text-gray-500">

        <ul class="flex flex-wrap justify-center gap-x-4 gap-y-2 text-gray-500">
            <li><a href="#" class="hover:underline">About</a></li>
            <li><a href="#" class="hover:underline">Help Center</a></li>
            <li><a href="#" class="hover:underline">Terms of Service</a></li>
            <li><a href="#" class="hover:underline">Privacy Policy</a></li>
            <li><a href="#" class="hover:underline">Cookie Policy</a></li>
            <li><a href="#" class="hover:underline">Accessibility</a></li>
            <li><a href="#" class="hover:underline">Ads Info</a></li>
            <li><a href="#" class="hover:underline">Blog</a></li>
            <li><a href="#" class="hover:underline">Careers</a></li>
            <li><a href="#" class="hover:underline">Brand Resources</a></li>
            <li><a href="#" class="hover:underline">Advertising</a></li>
            <li><a href="#" class="hover:underline">Marketing</a></li>
            <li><a href="#" class="hover:underline">UniConnect for Business</a></li>
            <li><a href="#" class="hover:underline">Developers</a></li>
            <li><a href="#" class="hover:underline">Directory</a></li>
            <li><a href="#" class="hover:underline">Settings</a></li>
        </ul>

        <p class="text-center text-gray-400 text-sm">
            Â© 2025 <span class="font-medium">UniConnect</span>. All rights reserved.
        </p>
    </footer>`)
  }



} 
